---
interface Opciones {
  texto: string;
  ulr: string;
}
interface Props {
    opciones: Array<Opciones>
}

const {opciones} = Astro.props;
---
<script>

const menuLista = document.querySelector(".menu__lista") as HTMLImageElement;
const menuEnlaces = document.querySelector(
  ".menu-enlaces",
) as HTMLUListElement;
menuLista.addEventListener("click", () => {
  menuEnlaces.classList.toggle("menu-enlaces--tablet");
});

</script>

<ul class="menu-enlaces">
{
  opciones.map(opcion => {
    return <li class="menu-enlace__item"><a href={opcion.ulr}>{opcion.texto}</a></li>
  })
}
</ul>

<style>

.menu-enlaces {
    flex-basis: 653px;
    display: flex;
    justify-content: space-between;
    list-style-type: none;
    padding-inline: 15px;

    @media (width <= 768px) {
        position: absolute;
        transition: left 0.4s linear;
        background-color: #202020;
        padding: 20px 0;
        inline-size: 100%;
        flex-flow: column;
        gap: 10px;
        align-items: center;
        position: absolute;
        top: 76px;
        left: -100%;

        & .menu-enlace__item {
            inline-size: 92%;
            background-color: black;
            padding: 10px;
            text-align: center;
            border-radius: 15px;

            & a {
                font-size: 1.9rem;
                inline-size: 95px;
            }
        }
    }
}

.menu-enlace__item {
    block-size: fit-content;
    padding: 6px;

    &:hover {
        background-color: #fff;
        border-radius: 10px;

        & a {
            color: #2a7ae4;
            font-weight: bold;
        }
    }

    & a {
        text-decoration: none;
        color: white;
        transition:
            transform 0.2s linear,
            font-weight 0.2s linear,
            text-decoration 0.2s linear;
    }
}

.menu-enlaces--tablet {
    @media (width <= 768px) {
        left: 0;
    }
}
</style>
